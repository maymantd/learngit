git(1)手册页
姓名
git-愚蠢的内容跟踪器
资料描述
选项

GIT命令
高级命令（瓷器）
我们将两个命令分离到主命令中
1. 主要瓷器命令-
git-添加(1)
将文件内容添加到索引中。

git-am(1)
从邮箱应用一系列修补程序。

git-存档(1)
从命名树创建文件存档。

git-平分(1)
使用二进制搜索来查找引入错误的提交。

git-分支(1)
列出、创建或删除分支。

git-bundle(1)
按存档移动对象和refs。

git-结帐(1)
切换分支或恢复工作树文件。

git-樱桃采摘(1)
应用一些现有提交引入的更改。

git-citool(1)
Git-commit的图形替代方案。

git-clean(1)
从工作树中删除未跟踪的文件。

git-克隆(1)
将存储库克隆到新目录中。

git-提交(1)
记录对存储库的更改。

git-描述(1)
根据可用的ref为对象提供人类可读的名称。

git-差异(1)
显示提交，提交和工作树等之间的更改。

git-获取(1)
从另一个存储库下载对象和refs。

git-格式-补丁(1)
为电子邮件提交准备补丁。

git-gc(1)
清理不必要的文件并优化本地存储库。

git-grep(1)
打印与模式匹配的行。

git-gui(1)
Git的便携式图形界面。

git-init(1)
创建一个空的Git存储库或重新初始化现有的存储库。

git-日志(1)
显示提交日志。

git-维护(1)
运行任务以优化Git存储库数据。

git-合并(1)
将两个或多个开发历史连接在一起。

git-mv(1)
移动或重命名文件、目录或符号链接。

git-笔记(1)
添加或检查对象注释。

git-pull(1)
从另一个存储库或本地分支获取并与之集成。

git-推送(1)
更新远程refs以及关联的对象。

git-范围-差异(1)
比较两个提交范围（例如分支的两个版本）。

git-rebase(1)
在另一个基本提示之上重新应用提交。

git-重置(1)
将电流头复位到指定状态.

git-还原(1)
恢复工作树文件。

git-还原(1)
恢复一些现有的提交。

git-rm(1)
从工作树和索引中删除文件。

git-shortlog(1)
总结git日志输出。

git-显示(1)
示各种类型的对象。

git-稀疏-结帐(1)
将工作树减少到跟踪文件的子集。

git-藏匿(1)
将更改隐藏在脏的工作目录中。

git状态(1)
显示工作树状态。

git-子模块(1)
初始化、更新或检查子模块。

git-开关(1)
切换分支。

git标签(1)
创建、列出、删除或验证使用GPG签名的标记对象。

git-工作树(1)
管理多个工作树。

gitk(1)
Git存储库浏览器。
2. 辅助命令-操纵器:
git-配置(1)
获取和设置存储库或全局选项。

git-快速导出(1)
Git数据导出器。

git-快速导入(1)
快速Git数据导入器的后端。

git-过滤器-分支(1)
重写分支。

git-mergetool(1)
运行合并冲突解决工具来解决合并冲突。

git-pack-refs(1)
打包头和标签以实现高效的存储库访问。

git-修剪(1)
从对象数据库中删除所有无法访问的对象。

git-reflog(1)
管理reflog信息。

git-远程(1)
管理一组被跟踪的存储库.

git-重新包装(1)
在存储库中打包未打包的对象。

git-替换(1)
创建，列出，删除refs来替换对象。

审讯员:

git-注释(1)
使用提交信息注释文件行。

git-责备(1)
显示哪个版本和作者上次修改了文件的每一行。

git-bugreport(1)
收集用户提交错误报告的信息.

git-计数-对象(1)
计算未打包的对象数及其磁盘消耗。

git-difftool(1)
使用常用差异工具显示更改。

git-fsck(1)
验证数据库中对象的连接性和有效性。

git-帮助(1)
显示有关Git的帮助信息。

git-instaweb(1)
在gitweb中即时浏览您的工作存储库。

git-合并树(1)
显示三路合并而不接触索引.

git-rerere(1)
重用冲突合并的记录解析。

git-show-分支(1)
显示分支及其提交。

git-验证-提交(1)
检查提交的GPG签名。

git-验证-标签(1)
检查标签的GPG签名。

git-whatchanged(1)
显示每个提交引入的不同日志。

gitweb(1)
Git web界面（Git存储库的web前端）。
3. 与他人互动
这些命令是通过电子邮件补丁与外部SCM和其他人交互.
4. 重置，恢复和恢复
git-revert（1）是关于创建一个新的提交，以恢复其他提交所做的更改。
git-restore（1）是关于从索引或其他提交恢复工作树中的文件。 此命令不会更新您的分支。 该命令还可用于从另一个提交恢复索引中的文件。
git-reset（1）是关于更新分支，移动提示以便从分支中添加或删除提交。 此操作会更改提交历史记录。
git reset也可用于恢复索引，与git restore重叠。

低级命令（管道）
虽然Git包含自己的瓷器层，但它的低级命令足以支持替代瓷器的开发。 这种瓷器的开发人员可能会从阅读git-update-index（1）和git-read-tree（1）开始。
这些低级命令的接口（输入，输出，选项集和语义）意味着比低级命令更稳定，因为这些命令主要用于脚本化使用。 另一方面，瓷器命令的接口可能会发生变化，以改善最终用户体验。
以下描述将低级命令分为操作对象（在存储库、索引和工作树中）的命令、询问和比较对象的命令以及在存储库之间移动对象和引用的命令。

操作命令
审讯命令
同步存储库
内部帮助程序命令

指南
配置机制
标识符术语
符号标识符
文件/目录结构
术语
环境变量
Git差异
讨论情况

进一步文件
作者
报告错误

请参阅
GIT的
Git(1)套件的一部分
